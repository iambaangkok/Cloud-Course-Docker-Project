version: '3.8'

services:

## MYSQL
  mysql:
    image: mysql:8.3
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: message_db
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

## KAFKA
# https://medium.com/@rayato159/การใช้งาน-kafka-ใน-golang-จาก-zero-to-hero-maybe-a9538720ca75
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181



# # https://github.com/conduktor/kafka-stack-docker-compose
#   zoo1:
#     image: confluentinc/cp-zookeeper:7.3.2
#     hostname: zoo1
#     container_name: zoo1
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_SERVER_ID: 1
#       ZOOKEEPER_SERVERS: zoo1:2888:3888

#   kafka1:
#     image: confluentinc/cp-kafka:7.3.2
#     hostname: kafka1
#     container_name: kafka1
#     ports:
#       - "9092:9092"
#       - "29092:29092"
#       - "9999:9999"
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#       KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
#       KAFKA_BROKER_ID: 1
#       KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#       KAFKA_JMX_PORT: 9999
#       KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
#       KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
#       KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
#     depends_on:
#       - zoo1

# Volumes for MySQL
volumes:
  mysql_data:
    name: mysql_data_volume