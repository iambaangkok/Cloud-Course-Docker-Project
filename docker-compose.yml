version: '3.8'

services:
## Gateway API
  gateway-api:
    image: iambaangkok/go-kafka-gateway-api:latest
    container_name: gateway-api
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_started
      kafka:
        condition: service_started
    restart: unless-stopped

## Internal API
  internal-api:
    image: iambaangkok/go-kafka-internal-api:latest
    container_name: internal-api
    depends_on:
      mysql:
        condition: service_started
      kafka:
        condition: service_started
    restart: unless-stopped


## MYSQL
  mysql:
    image: mysql:8.3
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: message_db
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
    ports:
      - "3306:3306"
    expose:
      - 3306
    volumes:
      - mysql_data:/var/lib/mysql

## KAFKA
# based on https://medium.com/@rayato159/การใช้งาน-kafka-ใน-golang-จาก-zero-to-hero-maybe-a9538720ca75
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    expose:
      - 9092
      - 29092
      - 9999
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

# Volumes for MySQL
volumes:
  mysql_data:
    name: mysql_data_volume